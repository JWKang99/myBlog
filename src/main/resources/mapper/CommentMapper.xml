<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kang.blog.dao.CommentMapper">
    <resultMap id="comment" type="Comment">
        <id column="id" property="id"/>
        <result column="nickname" property="nickname"/>
        <result column="email" property="email"/>
        <result column="content" property="content"/>
        <result column="create_time" property="createTime"/>
        <result column="avatar" property="avatar"/>
        <result column="blog_id" property="blogId"/>
        <result column="parent_comment_id" property="parentCommentId"/>
    </resultMap>
    <select id="findByBlogIdAndParentCommentNull" resultMap="comment">
        select c.id,c.nickname,c.email,c.content,c.avatar,
               c.create_time,c.blog_id,c.parent_comment_id,c.admin_comment
        from t_comment c, t_blog b
        where c.blog_id = b.id and c.blog_id = #{blogId} and c.parent_comment_id = -1
        order by c.create_time desc
    </select>

    <insert id="saveComment" parameterType="Comment">
        insert into blog.t_comment (nickname,email,content,avatar,
                                      create_time,blog_id,parent_comment_id,admin_comment)
        values (#{nickname},#{email},#{content},#{avatar},
                #{createTime},#{blogId},#{parentCommentId}, #{adminComment});
    </insert>

    <select id="findById" resultMap="comment">
        select c.id, c.nickname, c.email, c.content, c.avatar,
               c.create_time, c.blog_id, c.parent_comment_id,c.admin_comment
        from t_comment c
        where c.id = #{id}
    </select>

    <select id="getAllReplies" resultMap="comment">
        select c.id, c.nickname, c.email, c.content, c.avatar,
               c.create_time, c.blog_id, c.parent_comment_id,c.admin_comment
        from t_comment c
        where c.parent_comment_id = #{id}
    </select>
</mapper>
